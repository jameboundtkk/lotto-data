// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using lotto_DB.lottoModel;

namespace lotto_DB.lottoContext
{
    public partial class LocaldbMssqllocaldbContext : DbContext
    {
        public LocaldbMssqllocaldbContext()
        {
        }

        public LocaldbMssqllocaldbContext(DbContextOptions<LocaldbMssqllocaldbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Account> Account { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<RoleMenu> RoleMenu { get; set; }
        public virtual DbSet<SubMenu> SubMenu { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Account>(entity =>
            {
                entity.Property(e => e.AccountId).HasColumnName("Account_ID");

                entity.Property(e => e.AccountBirthday)
                    .HasColumnName("Account_Birthday")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccountCreateDate)
                    .HasColumnName("Account_CreateDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccountCreateby)
                    .HasColumnName("Account_Createby")
                    .HasMaxLength(50);

                entity.Property(e => e.AccountEmail)
                    .HasColumnName("Account_Email")
                    .HasMaxLength(50);

                entity.Property(e => e.AccountFullName)
                    .HasColumnName("Account_FullName")
                    .HasMaxLength(50);

                entity.Property(e => e.AccountPassword)
                    .HasColumnName("Account_Password")
                    .HasMaxLength(10);

                entity.Property(e => e.AccountTel)
                    .HasColumnName("Account_Tel")
                    .HasMaxLength(50);

                entity.Property(e => e.AccountUpdateDate)
                    .HasColumnName("Account_UpdateDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccountUpdateby)
                    .HasColumnName("Account_Updateby")
                    .HasMaxLength(50);

                entity.Property(e => e.AccountUserName)
                    .HasColumnName("Account_UserName")
                    .HasMaxLength(10);

                entity.Property(e => e.RoleId).HasColumnName("Role_ID");
            });

            modelBuilder.Entity<Menu>(entity =>
            {
                entity.Property(e => e.MenuId).HasColumnName("Menu_ID");

                entity.Property(e => e.Icon)
                    .HasColumnName("icon")
                    .HasMaxLength(50);

                entity.Property(e => e.Text)
                    .HasColumnName("text")
                    .HasMaxLength(50);

                entity.Property(e => e.To)
                    .HasColumnName("to")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Role>(entity =>
            {
                entity.Property(e => e.RoleId).HasColumnName("Role_ID");

                entity.Property(e => e.RoleCreateDate)
                    .HasColumnName("Role_CreateDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.RoleCreateby)
                    .HasColumnName("Role_Createby")
                    .HasMaxLength(50);

                entity.Property(e => e.RoleName)
                    .HasColumnName("Role_name")
                    .HasMaxLength(50);

                entity.Property(e => e.RoleUpdateDate)
                    .HasColumnName("Role_UpdateDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.RoleUpdateby)
                    .HasColumnName("Role_Updateby")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<RoleMenu>(entity =>
            {
                entity.Property(e => e.RoleMenuId).HasColumnName("RoleMenu_Id");

                entity.Property(e => e.MenuId).HasColumnName("Menu_ID");

                entity.Property(e => e.RoleId).HasColumnName("Role_ID");

                entity.Property(e => e.RoleMenuCreateDate)
                    .HasColumnName("RoleMenu_CreateDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.RoleMenuCreateby)
                    .HasColumnName("RoleMenu_Createby")
                    .HasMaxLength(50);

                entity.Property(e => e.RoleMenuUpdateDate)
                    .HasColumnName("RoleMenu_UpdateDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.RoleMenuUpdateby)
                    .HasColumnName("RoleMenu_Updateby")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<SubMenu>(entity =>
            {
                entity.Property(e => e.SubMenuId).HasColumnName("SubMenu_ID");

                entity.Property(e => e.MenuId).HasColumnName("Menu_ID");

                entity.Property(e => e.Text)
                    .HasColumnName("text ")
                    .HasMaxLength(50);

                entity.Property(e => e.To)
                    .HasColumnName("to")
                    .HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}